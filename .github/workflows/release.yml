name: release

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-release:
    name: Tag, build, and publish GA release
    runs-on: ubuntu-latest
    # Fire only when:
    #  - A PR merged into main (train model), OR manual dispatch
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.base.ref == 'main')
    steps:
      - name: Checkout merge commit
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.merge_commit_sha || github.ref }}

      - name: Determine next tag (patch bump)
        id: tagger
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          tag_prefix: v
          commit_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Fetch all tags
        run: git fetch --all --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Build and publish with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GORELEASER_CURRENT_TAG: ${{ steps.tagger.outputs.new_tag }}
          GORELEASER_PREVIOUS_TAG: ${{ steps.tagger.outputs.previous_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to workflow run (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: glint-dist
          path: dist/**
